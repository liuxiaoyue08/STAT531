x <- read.table(file="http://ionides.github.io/531w16/intro/ann_arbor_weather.csv",header=TRUE)
head(x1)
```
x <- read.table(file="http://ionides.github.io/531w16/intro/ann_arbor_weather.csv",header=TRUE)
head(x)
x1 <- na.omit(x)
plot(Low~Year,data=x1,type="l")
x <- read.table(file="http://ionides.github.io/531w16/intro/ann_arbor_weather.csv",header=TRUE)
head(x)
```{r}
x1 <- na.omit(x)
plot(Low~Year,data=x1,type="l")
```
help(lines)
help(lwd)
* Let's start by fitting a stationary ARMA$(p,q)$ model under the null hypothesis that there is no trend. This hypothesis, which asserts that nothing has substantially changed in this system over the last 150 years, is not entirely unreasonable from looking at the data.
hist(x1$Low, probability = T, main = "Histogram of Low Temperature", ylim = c(0,0.08))
hist(dat_1$Low, probability = T, main = "Histogram of Low Temperature", ylim = c(0,0.08), xlab = "Low Temperature")
xfit <- seq(min(dat_1$Low),max(dat_1$High), length = 100)
yfit <- dnorm(xfit, mean = mean(dat_1$Low), sd = sd(dat_1$Low))
lines(xfit, yfit, col = "blue", lwd = 2)
lines(density(dat_1$Low), col = "red", lwd = 2)
dat <- read.table(file="http://ionides.github.io/531w16/intro/ann_arbor_weather.csv",header=TRUE)
dat_1 <- na.omit(dat) # Deleting the missing data in dataset #
hist(dat_1$Low, probability = T, main = "Histogram of Low Temperature", ylim = c(0,0.08), xlab = "Low Temperature")
xfit <- seq(min(dat_1$Low),max(dat_1$High), length = 100)
yfit <- dnorm(xfit, mean = mean(dat_1$Low), sd = sd(dat_1$Low))
lines(xfit, yfit, col = "blue", lwd = 2)
lines(density(dat_1$Low), col = "red", lwd = 2)
hist(x1$Low, probability = T, main = "Histogram of Low Temperature in January", ylim = c(0,0.06), xlab = "Low Temperature")
lines(density(x1$Low), col = "black", lwd = 2)
hist(x1$Low, probability = T, main = "Histogram of Low Temperature", ylim = c(0,0.06), xlab = "Low Temperature")
temp_x <- seq(min(x1$Low),max(x1$Low), length = 100)
y <- dnorm(x, mean = mean(x1$Low), sd = sd(x1$Low))
lines(temp_x, y, col = "blue", lwd = 2)
lines(density(x1$Low), col = "black", lwd = 2)
hist(x1$Low, probability = T, main = "Histogram of Low Temperature", ylim = c(0,0.06), xlab = "Low Temperature")
temp_x <- seq(min(x1$Low),max(x1$Low), length = 100)
y <- dnorm(temp_x, mean = mean(x1$Low), sd = sd(x1$Low))
lines(temp_x, y, col = "blue", lwd = 2)
lines(density(x1$Low), col = "black", lwd = 2)
help(dnorm)
hist(x1$Low, probability = T, main = "Histogram of Low Temperature", ylim = c(0,0.06), xlab = "Low Temperature")
temp_x <- seq(min(x1$Low),max(x1$Low), length = 115)
y <- dnorm(temp_x, mean = mean(x1$Low), sd = sd(x1$Low))
lines(temp_x, y, col = "blue", lwd = 2)
lines(density(x1$Low), col = "black", lwd = 2)
hist(x1$Low, probability = T, main = "Histogram of Low Temperature", ylim = c(0,0.06), xlab = "Low Temperature")
temp_x <- seq(min(x1$Low),max(x1$Low), length = 115)
y <- dnorm(temp_x, mean = mean(x1$Low), sd = sd(x1$Low))
lines(temp_x, y, col = "blue", lwd = 1.5)
lines(density(x1$Low), col = "black", lwd = 1.5)
hist(x1$Low, probability = T, main = "Histogram of Low Temperature", ylim = c(0,0.06), xlab = "Low Temperature")
temp_x <- seq(min(x1$Low),max(x1$Low), length = 115)
y <- dnorm(temp_x, mean = mean(x1$Low), sd = sd(x1$Low))
lines(temp_x, y, col = "blue", lwd = 2)
lines(density(x1$Low), col = "black", lwd = 2)
temp_arma<-arima(x$Low,order=c(0,0,0))
low_arma<-arima(x1$Low,order=c(0,0,0))
low_arma
ACF = ARMAacf(ar = c(1.5,-0.8),ma=0,50)
ACF
acf(ACF)
help(ARMAacf)
toeplitz(ARMAacf(c(1.5,-0.8),0))
plot(x=seq(-0.5,0.5,by=0.01),y=1/(3.89-5.4*cos(2*pi*x)+1.6*cos(4*pi*x)),lty='l')
x=seq(-0.5,0.5,by=0.01)
y=1/(3.89-5.4*cos(2*pi*x)+1.6*cos(4*pi*x))
plot(x,y)
plot(x,y,lty='l')
help(plot)
plot(x,y,lty=l)
lines(x,y,lwd=2)
plot(x)
plot(x,y,type='l')
plot(x,y,type='l',col='blue')
plot(x,y,type='l',col='blue', xlab='$\w',ylab='spectral density',main='spectral density of AR(2)')
plot(x,y,type='l',col='blue', xlab='$\w$',ylab='spectral density',main='spectral density of AR(2)')
plot(x,y,type='l',col='blue', xlab='w',ylab='spectral density',main='spectral density of AR(2)')
y2=3+4*cos(2*pi*x)+2*cos(4*pi*x)
plot(x,y2,type='l',col='blue', xlab='w',ylab='spectral density',main='spectral density of MA(2)')
data = read.table('D:/MA 2015/STAT531/SN_m_tot_V2.0.txt')
data = read.table('D:/MA 2015/STAT531/SN_m_tot_V2.0.txt',header =F)
data = read.table('D:/MA 2015/STAT531/sunspots.txt',header =T)
View(data)
plot(data$Time,data$Number)
plot(data$Time,data$Number,type='l')
spectrum(data$Number,method ='ar')
spectrum(data$Number,method= 'span')
spectrum(data$Number,span=c(3,5,3))
spectrum(data$Number,method ='ar')
aic_table <- function(data,P,Q){
table <- matrix(NA,(P+1),(Q+1))
for(p in 0:P) {
for(q in 0:Q) {
table[p+1,q+1] <- arima(data,order=c(p,0,q))$aic
}
}
dimnames(table) <- list(paste("<b> AR",0:P, "</b>", sep=""),paste("MA",0:Q,sep=""))
table
}
AIC<-aic_table(data$Number,4,5)
View(AIC)
round(min(AIC),2)
spectrum(data$Number, main ="Unsmoothed periodogram")
spectrum(data$Number,method="ar", main ="Spectrum estimated via AR model picked by AIC")
spectrum(data$Number,spans=c(3,5,3), main="Smoothed periodogram",ylim=c(15,100))
spectrum(data$Number,spans=c(3,5,3), main="Smoothed periodogram")
acf(data$Number)
summary(acf(data$Number))
summary(acf(data$Number)$acf)
data_arma <-arima(data$Number,order = c(2,0,4))
data_arma
acf(data$Number)
help(arima.sim)
arima.sim(list(ar = c(1.9761,-0.9786),ma=c(-1.4487,0.3031,0.1004,0.0705)),n=3204)
acf(arima.sim(list(ar = c(1.9761,-0.9786),ma=c(-1.4487,0.3031,0.1004,0.0705)),n=3204))
acf(arima.sim(list(ar = c(1.9761,-0.9786),ma=c(-1.4487,0.3031,0.1004,0.0705)),n=3204),main='Simulation ARMA(2,4)')
x=seq(0,0.5,by=0.01)
y=1/(3.89-5.4*cos(2*pi*x)+1.6*cos(4*pi*x))
y2=3+4*cos(2*pi*x)+2*cos(4*pi*x)
plot(x,y,type='l',col='blue', xlab='w',ylab='spectral density',main='spectral density of AR(2)')
plot(x,y2,type='l',col='blue', xlab='w',ylab='spectral density',main='spectral density of MA(2)')
ARMAacf(ar=c(1.5,-0.8),ma=0)
acf(arima.sim(list(ar = c(1.5,-0.8),ma=0,n=3204))
)
acf(arima.sim(list(ar = c(1.5,-0.8),ma=0),n=3204)
ï¼‰
acf(arima.sim(list(ar = c(1.5,-0.8),ma=0),n=500),main = ACF of AR(2))
acf(arima.sim(list(ar = c(1.5,-0.8),ma=0),n=500),main = 'ACF of AR(2)')
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of AR(2)')
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of MA(2)')
help(acf)
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of MA(2)',type='covariance')
acf(arima(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of MA(2)',type='covariance')
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of MA(2)',type='covariance')
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of AR(2)',type ='covariance')
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of AR(2)',type ='covariance')
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of AR(2)',type ='covariance')
set.seed(123456789)
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of AR(2)',type ='covariance')
acf(arima.sim(list(ar = 0,ma=c(1,1)),n=500),main = 'ACF of MA(2)',type='covariance')
data= read.table('C:/Users/Platina/Desktop',header=F)
data= read.table('C:/Users/Platina/Desktop/country year.txt',header=F)
View(data)
colnames(data)=c('country','year','rating')
library(ggplot2)
p11 = ggplot(aes(y = rating, x = year, fill = country), data = data)
p11
ggplot(df,aes(x=year,y=rating))+geom_point(aes(colour=country))
ggplot(data,aes(x=year,y=rating))+geom_point(aes(colour=country))
ggplot(data,aes(x=year,y=rating),lty='l')+geom_point(aes(colour=country))
ggplot(data,aes(x=year,y=rating),lty='l')+geom_point(aes(colour=country))+geom_line()
ggplot(data,aes(x=year,y=rating),lty='l')+geom_point(aes(colour=country))
ggplot(data,aes(x=year,y=rating))+geom_point(aes(colour=country))
help(qplot)
qplot(data=data,x=year,y=rating,color=country,geom=c('line','point'))
ablines()
help(abline)
ggplot(data,aes(x=year,y=rating),geom='line')+geom_point(aes(colour=country))
qplot(data=data,x=year,y=rating,color=country,geom=c('smooth','point'))
ggplot(data,aes(x=year,y=rating),geom='line')+geom_point(aes(colour=country))
ggplot(data,aes(x=year,y=rating))+geom_point(aes(colour=country))
ggplot(data,aes(x=year,y=rating))+geom_point(aes(colour=country),size=4)
```{r}
x <- read.table(file="https://ms.mcmaster.ca/~bolker/measdata/nycmeas.dat",header=FALSE)
x1 <- na.omit(x)
head(x1)
```
View(x)
x <- read.table(file="https://ms.mcmaster.ca/~bolker/measdata/nycmeas.dat",header=FALSE)
col.names(x)=c('Time', 'Case reprots')
head(x)
x <- read.table(file="https://ms.mcmaster.ca/~bolker/measdata/nycmeas.dat",header=FALSE)
colnames(x)=c('Time', 'Case reprots')
head(x)
x <- read.table(file="https://ms.mcmaster.ca/~bolker/measdata/nycmeas.dat",header=FALSE)
colnames(x)=c('Time', 'Cases')
head(x)
rm(x1)
plot(Cases~Time,data=x,type="l")
lines(x = x$Time, y = rep(mean(x1$Case, na.rm = T), length(x$Time)), col = "blue", lwd = 1.5)
lines(x = x$Time, y = rep(mean(x$Case, na.rm = T), length(x$Time)), col = "blue", lwd = 1.5)
spectrum(x,method='ar')
spectrum(x$Cases,method='ar')
x <- read.csv(file="https://github.com/liuxiaoyue08/531documents/blob/master/temp_pm25_2010_2012.csv",header=T)
View(x)
x <- read.csv(file="https://raw.githubusercontent.com/liuxiaoyue08/531documents/master/temp_pm25_2010_2012.csv",header=T)
View(x)
help(psi)
"psigamma"
help("psigamma")
help(ga)
help("gamma")
f <-function(x){
dig<-digamma(x)/gamma(x)
n=14
l=-n*dig-n*log(323.6)+n*log(x)+log(1.22578*10^19)
return(l)
}
optimize(f,interval=c(0,1000),maximum = T)
f <-function(x){
n=14
l=-n*lgamma(x)-n*x*log(323.6/x)+(x-1)*log(1.22578*10^19)-n*x
return(l)
}
optimize(f,interval=c(0,1000),maximum = T)
f <-function(x){
n=14
l=-n*log(gamma(x))-n*x*log(323.6/(n*x))+(x-1)*log(1.22578*10^19)-n*x
return(l)
}
optimize(f,interval=c(0,1000),maximum = T)
optimize(f,interval=c(1,1000),maximum = T)
optimize(f,interval=c(1,600),maximum = T)
10^19
f <-function(x){
n=14
l=-n*log(gamma(x))-n*x*log(323.6/(n*x))+(x-1)*log(1.22578*(10^19))-n*x
return(l)
}
optimize(f,interval=c(1,600),maximum = T)
f <-function(x){
n=14
b=323.6/n/x
l=-n*log(gamma(x))-n*x*log(b)+(x-1)*log(1.22578*(10^19))-323.6/b
return(l)
}
optimize(f,interval=c(1,600),maximum = T)
warnings
warnings()
f <-function(x){
n=14
b=323.6/n/x
l=-n*lgamma(x)-n*x*log(b)+(x-1)*log(1.22578*(10^19))-323.6/b
return(l)
}
optimize(f,interval=c(1,600),maximum = T)
f <-function(x){
n=14
b=323.6/n/x
l=-n*lgamma(x)-n*x*log(b)+(x-1)*log(1.22578*(10^19))-323.6/b
return(l)
}
optimize(f,interval=c(1,1000),maximum = T)
install.packages("pomp")
source("http://ionides.github.io/531w16/hw/pomp_prep/pompTest.R",echo=TRUE)
install.packages("Rtools")
source("http://ionides.github.io/531w16/hw/pomp_prep/pompTest.R",echo=TRUE)
install.packages("pomp")
source("http://ionides.github.io/531w16/hw/pomp_prep/pompTest.R",echo=TRUE)
source("http://ionides.github.io/531w16/hw/pomp_prep/pompTest.R",echo=TRUE)
source("http://ionides.github.io/531w16/hw/pomp_prep/pompTest.R",echo=TRUE)
install.packages("Rtools")
install.packages(c("BH", "boot", "car", "curl", "digest", "evaluate", "faraway", "formatR", "geosphere", "ggplot2", "gridExtra", "gtable", "Hmisc", "httr", "latticeExtra", "lme4", "mapdata", "maps", "maptools", "Matrix", "mgcv", "munsell", "nlme", "nnet", "quantreg", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "rgl", "rJava", "rmarkdown", "scales", "sp", "tidyr", "vegan", "XML"))
source("http://ionides.github.io/531w16/hw/pomp_prep/pompTest.R",echo=TRUE)
set.seed(594709947L)
require(ggplot2)
require(plyr)
require(reshape2)
require(pomp)
stopifnot(packageVersion("pomp")>="0.69-1")
dat <- read.csv("http://ionides.github.io/531w16/notes11/parus.csv")
head(dat)
plot(pop~year,data=dat,type='o')
parus <- pomp(dat,times="year",t0=1959)
plot(parus)
skel <- Csnippet("DN = r*N*exp(-N/k);")
pomp(parus,skeleton=skel,skeleton.type='map',statenames=c("N"),paramnames=c("r","k"))->parus
traj <- trajectory(parus,params=c(N.0=1,r=12, k=2),as.data.frame=TRUE)
ggplot(data=traj,aes(x=time,y=N))+geom_line()
stochStep <- Csnippet("N=r*N*exp(-N/k);")
pomp(parus,rprocess=discrete.time.sim(step.fun=stochStep,delta.t=1),paramnames=c("r","sigma","k"),statenames=c("N","e")) -> parus
pomp(parus,rprocess=discrete.time.sim(step.fun=stochStep,delta.t=1),paramnames=c("r","k"),statenames=c("N","e")) -> parus
sim <- simulate(parus,params=c(N.0=1,r=12,k=2),as.data.frame=TRUE,states=TRUE)
sim <- simulate(parus,params=c(N.0=1,r=12,k=2),as.data.frame=TRUE,states=TRUE)
pomp(parus,rprocess=discrete.time.sim(step.fun=stochStep,delta.t=1),paramnames=c("r","k"),statenames=c("N")) -> parus
sim <- simulate(parus,params=c(N.0=1,r=12,k=2),as.data.frame=TRUE,states=TRUE)
plot(N~time,data=sim,type='o')
lines(N~time,data=traj,type='l',col='red')
rmeas <- Csnippet("pop = rnbinom(phi*N,si);")
dmeas <- Csnippet("lik = dnbinom(pop,m,mu=phi*N,si,give_log);")
pomp(parus,rmeasure=rmeas,statenames=c("N"),paramnames=c("m","phi","si"))->parus
sim<-simulate(parus,params=c(N.0=1,r=12,phi=0.5,si=0.2,k=2),as.data.frame=TRUE,states=TRUE)
plot(N~time,data=sim,type='o')
pomp(parus,rmeasure=rmeas,statenames=c("N"),paramnames=c("phi","si"))->parus
coef(parus) <- c(N.0=1,r=20,phi=200,si=0.5,k=2)
sim<-simulate(parus,nsim=5,as.data.frame=TRUE,include.data=TRUE)
ggplot(data=sims,mapping=aes(x=time,y=pop))+geom_line()+
facet_wrap(~sim)
plot(N~time,data=sim,type='o')
sims<-simulate(parus,nsim=5,as.data.frame=TRUE,include.data=TRUE)
ggplot(data=sims,mapping=aes(x=time,y=pop))+geom_line()+
facet_wrap(~sim)
parus <- pomp(dat,times="year",t0=1959)
plot(parus)
skel <- Csnippet("DN = r*N*exp(-N/k);")
pomp(parus,skeleton=skel,skeleton.type='map',statenames=c("N"),paramnames=c("r","k"))->parus
traj <- trajectory(parus,params=c(N.0=1,r=12, k=5),as.data.frame=TRUE)
ggplot(data=traj,aes(x=time,y=N))+geom_line()
stochStep <- Csnippet("N=r*N*exp(-N/k);")
pomp(parus,rprocess=discrete.time.sim(step.fun=stochStep,delta.t=1),paramnames=c("r","k"),statenames=c("N")) -> parus
sim <- simulate(parus,params=c(N.0=1,r=12,k=5),as.data.frame=TRUE,states=TRUE)
plot(N~time,data=sim,type='o')
lines(N~time,data=traj,type='l',col='red')
rmeas <- Csnippet("pop = rnbinom(phi*N,si);")
dmeas <- Csnippet("lik = dnbinom(pop,m,mu=phi*N,si,give_log);")
pomp(parus,rmeasure=rmeas,statenames=c("N"),paramnames=c("phi","si"))->parus
coef(parus) <- c(N.0=1,r=20,phi=200,si=0.5,k=5)
sims<-simulate(parus,nsim=5,as.data.frame=TRUE,include.data=TRUE)
ggplot(data=sims,mapping=aes(x=time,y=pop))+geom_line()+
facet_wrap(~sim)
plot(N~time,data=sim,type='o')
parus <- pomp(dat,time="year",t0=1959)
skel <- Csnippet("DN = ((a*N)/(1+(b*N)));")
parus <- pomp(parus,skeleton=skel,skeleton.type='map',paramnames=c("a", "b"),statenames=c("N"))
traj <- trajectory(parus,params=c(N.0=1,a=4,b=1.5),as.data.frame=TRUE)
ggplot(data=traj,aes(x=time,y=N))+geom_line()
traj <- trajectory(parus,params=c(N.0=1,a=1,b=1),as.data.frame=TRUE)
ggplot(data=traj,aes(x=time,y=N))+geom_line()
stochStep <- Csnippet("
e = rlnorm(mu,sigma);
N = ((a*N)/(1+(b*N)))*e;
")
pomp(parus,rprocess=discrete.time.sim(step.fun=stochStep,delta.t=1),paramnames=c("a","b", "mu","sigma"),statenames=c("N","e")) -> parus
sim <- simulate(parus,params=c(N.0=1,e.0=0,a=4,sigma=0.5,mu=-0.5*(0.5)^2,b=1.5),as.data.frame=TRUE,states=TRUE)
sim <- simulate(parus,params=c(N.0=1,e.0=0,a=1,b=1,sigma=0.5,mu=-0.5*(0.5)^2),as.data.frame=TRUE,states=TRUE)
plot(N~time,data=sim,type='o')
lines(N~time,data=traj,type='l',col='red')
rmeas <- Csnippet("pop = rpois(phi*N);")
dmeas <- Csnippet("lik = dpois(pop,phi*N,give_log);")
pomp(parus,rmeasure=rmeas,dmeasure=dmeas,statenames=c("N"),paramnames=c("phi")) -> parus
coef(parus) <- c(N.0=1,e.0=0,a=1,b=1,sigma=0.5,mu=-0.5*(0.5)^2,phi=200)
sims <- simulate(parus,nsim=3,as.data.frame=TRUE,include.data=TRUE)
ggplot(data=sims,mapping=aes(x=time,y=pop))+geom_line()+facet_wrap(~sim)
sims <- simulate(parus,nsim=5,as.data.frame=TRUE,include.data=TRUE)
ggplot(data=sims,mapping=aes(x=time,y=pop))+geom_line()+facet_wrap(~sim)
parus <- pomp(dat,time="year",t0=1959)
skel <- Csnippet("DN = ((a*N)/(1+(b*N)));")
parus <- pomp(parus,skeleton=skel,skeleton.type='map',paramnames=c("a", "b"),statenames=c("N"))
traj <- trajectory(parus,params=c(N.0=1,a=2,b=1),as.data.frame=TRUE)
ggplot(data=traj,aes(x=time,y=N))+geom_line()
stochStep <- Csnippet("
e = rlnorm(mu,sigma);
N = ((a*N)/(1+(b*N)))*e;
")
pomp(parus,rprocess=discrete.time.sim(step.fun=stochStep,delta.t=1),paramnames=c("a","b", "mu","sigma"),statenames=c("N","e")) -> parus
sim <- simulate(parus,params=c(N.0=1,e.0=0,a=2,b=1,sigma=0.5,mu=-0.5*(0.5)^2),as.data.frame=TRUE,states=TRUE)
plot(N~time,data=sim,type='o')
lines(N~time,data=traj,type='l',col='red')
rmeas <- Csnippet("pop = rpois(phi*N);")
dmeas <- Csnippet("lik = dpois(pop,phi*N,give_log);")
pomp(parus,rmeasure=rmeas,dmeasure=dmeas,statenames=c("N"),paramnames=c("phi")) -> parus
coef(parus) <- c(N.0=1,e.0=0,a=2,b=1,sigma=0.5,mu=-0.5*(0.5)^2,phi=200)
sims <- simulate(parus,nsim=5,as.data.frame=TRUE,include.data=TRUE)
ggplot(data=sims,mapping=aes(x=time,y=pop))+geom_line()+facet_wrap(~sim)
parus <- pomp(dat,time="year",t0=1959)
skel <- Csnippet("DN = ((a*N)/(1+(b*N)));")
parus <- pomp(parus,skeleton=skel,skeleton.type='map',paramnames=c("a", "b"),statenames=c("N"))
traj <- trajectory(parus,params=c(N.0=1,a=2,b=1),as.data.frame=TRUE)
ggplot(data=traj,aes(x=time,y=N))+geom_line()
traj <- trajectory(parus,params=c(N.0=1,a=12,b=5),as.data.frame=TRUE)
ggplot(data=traj,aes(x=time,y=N))+geom_line()
stochStep <- Csnippet("
e = rlnorm(mu,sigma);
N = ((a*N)/(1+(b*N)))*e;
")
pomp(parus,rprocess=discrete.time.sim(step.fun=stochStep,delta.t=1),paramnames=c("a","b", "mu","sigma"),statenames=c("N","e")) -> parus
sim <- simulate(parus,params=c(N.0=1,e.0=0,a=12,b=5,sigma=0.5,mu=-0.5*(0.5)^2),as.data.frame=TRUE,states=TRUE)
plot(N~time,data=sim,type='o')
lines(N~time,data=traj,type='l',col='red')
rmeas <- Csnippet("pop = rpois(phi*N);")
dmeas <- Csnippet("lik = dpois(pop,phi*N,give_log);")
pomp(parus,rmeasure=rmeas,dmeasure=dmeas,statenames=c("N"),paramnames=c("phi")) -> parus
coef(parus) <- c(N.0=1,e.0=0,a=12,b=5,sigma=0.5,mu=-0.5*(0.5)^2,phi=200)
sims <- simulate(parus,nsim=5,as.data.frame=TRUE,include.data=TRUE)
ggplot(data=sims,mapping=aes(x=time,y=pop))+geom_line()+facet_wrap(~sim)
(1/14+1/247+1/17+1/47)^0.5
sigma=(1/14+1/247+1/17+1/47)^0.5
exp(log(14*247/(17*47)+1.96*sigma)
)
exp(log(14*247/(17*47)-1.96*sigma))
sigma=(1/4+1/82+1/7+1/14)^0.5
exp(log(4*82/(7*14)-1.96*sigma))
exp(log(4*82/(7*14)+1.96*sigma))
sigma
sigma=(1/10+1/167+1/10+1/33)^0.5
sigma
exp(log(10*167/(10*33)+1.96*sigma))
exp(log(10*167/(10*33)-1.96*sigma))
sigma=(1/4+1/33+1/10+1/14)^0.5
exp(log(4*33/(10*14)-1.96*sigma))
sigma
exp(log(4*33/(10*14)-1.96*sigma))
4 * 33/(10 * 14) - 1.96 * sigma
exp(log(4*33/(10*14)+1.96*sigma))
sigma=(1/7+1/167+1/10+1/82)^0.5
exp(log(7*167/(10*82)+1.96*sigma))
exp(log(7*167/(10*82)-1.96*sigma))
sigma
sigma=(1/11+1/200+1/20+1/96)^0.5
exp(log(11*200/(20*96)-1.96*sigma))
exp(log(11*200/(20*96)+1.96*sigma))
sigma
admission <- c(1,1,1,1,0,0,0,0)   # 1 for admission
nationality <- c(1,1,0,0,1,1,0,0) # 1 for domestic
gender <- c(1,0,1,0,1,0,10)       # 1 for female
number <- c(4,10,7,10,14,33,82,167)
data <- cbind(admission,nationality,gender,number)
data <- data.frame(data)
View(data)
PhD <- cbind(admission,nationality,gender,number)
PhD <- data.frame(PhD)
model_a_n_g <- glm(number ~admission + nationality + gender,
data =PhD, family = poisson)
summary(model_a_n_g)
pchisq(deviance(model_a_n_g),df.residual(model_a_n_g),lower=F)
model2<-glm(number~admission+nationality+gender+nationality*gender,data=PhD,family="poisson")
summary(model2)
pchisq(deviance(model2),df.residual(model2),lower=F)
model3<-glm(number~admission+nationality+gender+nationality*admission,data=PhD,family="poisson")
summary(model3)
pchisq(deviance(model3),df.residual(model3),lower=F)
model4<-glm(number~admission+nationality+gender+gender*admission,data=PhD,family="poisson")
summary(model4)
pchisq(deviance(model4),df.residual(model4),lower=F)
model5<-glm(admission+nationality+gender+gender*admission+nationality*admission,data=x,family="poisson")
model5<-glm(number~admission+nationality+gender+gender*admission+nationality*admission,data=x,family="poisson")
model5<-glm(number~admission+nationality+gender+gender*admission+nationality*admission,data=PhD,family="poisson")
summary(model5)
pchisq(deviance(model5),df.residual(model5),lower=F)
model6<-glm(number~admission+nationality+gender+admission*gender+nationality*gender,data=PhD,family="poisson")
summary(model6)
pchisq(deviance(model6),df.residual(model6),lower=F)
model7<-glm(number~admission+nationality+gender+admission*nationality+gender*nationality,data=PhD,family="poisson")
summary(model7)
pchisq(deviance(model7),df.residual(model7),lower=F)
model8<-glm(number~admission+nationality+gender+admission*nationality+gender*nationality,gender*admission,data=PhD,,family="poisson")
summary(model8)
pchisq(deviance(model8),df.residual(model8),lower=F)
model8<-glm(number~admission+nationality+gender+admission*nationality+gender*nationality,gender*admission,data=PhD,family="poisson")
summary(model8)
pchisq(deviance(model8),df.residual(model8),lower=F)
admission <- c(1,1,1,1,0,0,0,0)   # 1 for admission
nationality <- c(1,1,0,0,1,1,0,0) # 1 for domestic
gender <- c(1,0,1,0,1,0,1,0)       # 1 for female
number <- c(4,10,7,10,14,33,82,167)
PhD <- cbind(admission,nationality,gender,number)
PhD <- data.frame(PhD)
model1 <- glm(number ~admission + nationality + gender,
data =PhD, family = poisson)
summary(model1)
pchisq(deviance(model1),df.residual(model1),lower=F)
model2<-glm(number~admission+nationality+gender+nationality*gender,data=PhD,family="poisson")
summary(model2)
pchisq(deviance(model2),df.residual(model2),lower=F)
model3<-glm(number~admission+nationality+gender+nationality*admission,data=PhD,family="poisson")
summary(model3)
pchisq(deviance(model3),df.residual(model3),lower=F)
model4<-glm(number~admission+nationality+gender+gender*admission,data=PhD,family="poisson")
summary(model4)
pchisq(deviance(model4),df.residual(model4),lower=F)
model5<-glm(number~admission+nationality+gender+gender*admission+nationality*admission,data=PhD,family="poisson")
summary(model5)
pchisq(deviance(model5),df.residual(model5),lower=F)
model6<-glm(number~admission+nationality+gender+admission*gender+nationality*gender,data=PhD,family="poisson")
summary(model6)
pchisq(deviance(model6),df.residual(model6),lower=F)
model7<-glm(number~admission+nationality+gender+admission*nationality+gender*nationality,data=PhD,family="poisson")
summary(model7)
pchisq(deviance(model7),df.residual(model7),lower=F)
model8<-glm(number~admission+nationality+gender+admission*nationality+gender*nationality,gender*admission,data=PhD,family="poisson")
summary(model8)
pchisq(deviance(model8),df.residual(model8),lower=F)
summary(model1)
pchisq(deviance(model1),df.residual(model1),lower=F)
summary(model2)
pchisq(deviance(model2),df.residual(model2),lower=F)
summary(model3)
pchisq(deviance(model3),df.residual(model3),lower=F)
summary(model4)
pchisq(deviance(model4),df.residual(model4),lower=F)
summary(model5)
pchisq(deviance(model5),df.residual(model5),lower=F)
summary(model6)
pchisq(deviance(model6),df.residual(model6),lower=F)
summary(model7)
pchisq(deviance(model7),df.residual(model7),lower=F)
summary(model8)
pchisq(deviance(model8),df.residual(model8),lower=F)
summary(model3)
pchisq(deviance(model3),df.residual(model3),lower=F)
setwd("D:/MA 2015/STAT531/final project")
CA <- read.csv("HEPATITIS_A_Cases_CALIFORNIA.csv",skip=2,header=T)
View(CA)
CA <- CA[CA$YEAR>=1966,]
View(CA)
CA$Time <- CA$YEAR+CA$WEEK/52
View(CA)
plot(CA$Time,CA$CALIFORNIA,main="Hepatitis in California from 1966 to 2011")
plot(CA$Time,CA$CALIFORNIA,main="Hepatitis in California from 1966 to 2011",type='l')
MI <-read.csv("HEPATITIS_A_Cases_MICHIGAN.csv",skip=2,header=T)
MI <- MI[MI$YEAR>=1966,]
MI$Time <- MI$YEAR+MI$WEEK/52
plot(MI$Time,MI$MICHIGAN,main="Hepatitis in Michigan from 1966 to 2011",type='l')
plot(CA$Time,CA$CALIFORNIA,main="Hepatitis A cases in California from 1966 to 2011",type='l')
plot(MI$Time,MI$MICHIGAN,main="Hepatitis A cases in Michigan from 1966 to 2011",type='l')
blowflies <- read.csv("blowflies.csv",skip=3, header=T)
blowflies <- read.csv("blowflies4.csv",skip=3, header=T)
blowfly <- read.csv("blowfly4.csv",skip=3, header=T)
plot(blowfly)
plot(blowfly,type='l')
